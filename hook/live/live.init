# vim: set ft=sh:
# shellcheck shell=sh
#
# https://shellcheck.net/wiki/SC2154
# shellcheck disable=2154

modprobe -a cdrom loop overlay squashfs 

medium=/run/initramfs/medium
system=/run/initramfs/sfs

mkdir -p "$medium" "$system" /run/initramfs/overlayfs/work /run/initramfs/overlayfs/write

[ -h "/dev/disk/by-$live_disk_type/$live_disk" ] || sleep 5

live_disk_fs=${live_disk_fs:-iso9660}

mount -t "$live_disk_fs" -o ro "/dev/disk/by-$live_disk_type/$live_disk" "$medium" || panic "unable to mount live medium"

mkdir -p /run/initramfs/ram
if [ "$live_ram" = "1" ]; then
    mount -t tmpfs -o "${live_ram_opts:?}" ram /run/initramfs/ram || panic "unable to mount ramdisk for live"
fi

if [ -z "$live_profile" ]; then
    live_profile=live
fi

if [ ! -f "$medium/live/${live_profile}.list" ]; then
    panic "live profile not found"
fi

while IFS= read -r line
do
    sfsimg="$line"
    sfsimg_path="$medium/live/sfs/$sfsimg.sfs"
    
    if [ "$live_ram" = "1" ]; then
        cp "${sfsimg_path}" /run/initramfs/ram/ || panic "unable to copy squashfs, insufficient memory?"
        sfsimg_path="/run/initramfs/ram/$sfsimg.sfs"
    fi

    sfsdev=$(losetup -f)
    losetup -r "$sfsdev" "$sfsimg_path"
    mkdir -p "$system/$sfsimg"
    mount -t squashfs -o "${live_sfs_opts:-defaults,ro}" "$sfsdev" "$system/$sfsimg" || panic "can not mount overlay squashfs"
done < "$medium/live/${live_profile}.list"

root_opts_arg=$(tac $medium/live/${live_profile}.list | sed "/^$/d; s@^@$system/@" | tr '\n' ':')
root_opts="lowerdir=${root_opts_arg%:},upperdir=/run/initramfs/overlayfs/write,workdir=/run/initramfs/overlayfs/work"

if [ "$live_ram" = "1" ]; then
    umount "$medium"
fi

export root_opts
